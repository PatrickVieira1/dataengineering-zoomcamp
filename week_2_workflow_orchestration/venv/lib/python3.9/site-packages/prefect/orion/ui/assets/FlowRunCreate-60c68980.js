import{d as g,U as v,af as k,V as D,c as m,u as t,a as F,w as p,e as T,Y as b,Z as S,o as x,b as d,aR as B,aS as V,aT as I,aU as N,y as i}from"./index-7b2fa3e3-fc9295f6.js";import{u as U}from"./usePageTitle-fb696d1b.js";import"./index-62fdc6b8.js";import{r as y}from"./routes-ee02d8bc.js";import"./meta-26546594.js";const $=g({__name:"FlowRunCreate",setup(z){const u=v(),a=k("deploymentId"),n=S(),f=D(u.deployments.getDeployment,[a]),e=m(()=>f.response),w=async s=>{var r,o;try{const l=await u.deployments.createDeploymentFlowRun(a.value,s),c=((o=(r=s.state)==null?void 0:r.stateDetails)==null?void 0:o.scheduledTime)??void 0,h=!c,C=I(N,{flowRun:l,flowRunRoute:y.flowRun,router:n,immediate:h,startTime:c});i(C,"success"),n.push(y.deployment(a.value))}catch(l){i("Something went wrong trying to create a flow run","error"),console.error(l)}},_=()=>{n.back()},R=m(()=>e.value?`Create Flow Run for Deployment: ${e.value.name}`:"Create Flow Run for Deployment");return U(R),(s,r)=>{const o=b("p-layout-default");return t(e)?(x(),F(o,{key:0},{header:p(()=>[d(t(B),{deployment:t(e)},null,8,["deployment"])]),default:p(()=>[d(t(V),{deployment:t(e),onSubmit:w,onCancel:_},null,8,["deployment"])]),_:1})):T("",!0)}}});export{$ as default};
